<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on Getting Started</title>
    <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/</link>
    <description>Recent content in Pages on Getting Started</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</managingEditor>
    <webMaster>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</webMaster><atom:link href="https://alemorm.github.io/ucsf-radiology-getting-started/page/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/deeplearninginfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/deeplearninginfo/</guid>
      <description>Deep Learning Resources Here are two popular and powerful machine learning libraries used for deep learning (refer to Machine Learning Resources to understand the concepts):
 Activate your Python virtual environment before running the following commands in the terminal:
 TensorFlow  Install the latest TensorFlow version:  conda install tensorflow-gpu -y     PyTorch  Install the latest PyTorch version:  conda install pytorch torchvision -y     DioscoriDESS DioscoriDESS is a segmentation framework developed by UCSF Radiology.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/dioscoridess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/dioscoridess/</guid>
      <description>DioscoriDESS  - Make sure to replace `/MY_PATH/dioscoridess/` with a location of your choice.    Make a directory where your input files (.yaml) and output files (.h5) will be stored:
mkdir -p /MY_PATH/dioscoridess/cfgs mkdir -p /MY_PATH/dioscoridess/logs mkdir -p /MY_PATH/dioscoridess/ckpt   Create your yaml file and save in /MY_PATH/dioscoridess/cfgs/my_input.yaml:
# Sample ./yaml config filecommon:seed:1234vis_GPU:&amp;#39;1&amp;#39;#single GPU compatibilitylog_path:&amp;#39;./experiments/training/logs/&amp;#39;save_path:&amp;#39;./experiments/training/ckpt/&amp;#39;print_freq:25data_train:data_root:&amp;#39;/data/bigbone5/JacobOeding/DL_code/splits/axial_train.csv&amp;#39;batch_size:4im_dims:!!python/tuple[512,512]crop :!!python/tuple[0,0,0,0]num_classes:3idx_classes :[0,1,2]num_channels:1normalization_file:&amp;#39;/data/bigbone5/JacobOeding/DL_code/dataInfo/Axial_MinMaxDataset.csv&amp;#39;data_val:data_root :&amp;#39;/data/bigbone5/JacobOeding/DL_code/splits/axial_val_onlySegmentedSlices.csv&amp;#39;batch_size:4im_dims:!!python/tuple[512,512]crop :!!python/tuple[0,0,0,0]num_classes:3idx_classes :[0,1,2]num_channels:1normalization_file:&amp;#39;/data/bigbone5/JacobOeding/DL_code/dataInfo/Axial_MinMaxDataset.csv&amp;#39;evaluate_mode:TruedataLoader_folder:&amp;#39;dataLoader&amp;#39;learn:max_steps:500000# instead of epochslr :0.00005optimizer:&amp;#39;adam&amp;#39;loss:&amp;#39;dice_loss_softmax&amp;#39;metrics:&amp;#39;dice_score&amp;#39;weights:[1,1.2,1]num_classes:3dataloader:&amp;#39;data_loader&amp;#39;comp:[&amp;#39;femur&amp;#39;,&amp;#39;tibia&amp;#39;,&amp;#39;background&amp;#39;]key_slice:!!python/tuple[0,0,0]patience:15# in number of validation runskeep_prob :0.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/gitedu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/gitedu/</guid>
      <description>Git Resources Git is a powerful versioning control system that allows you to keep track of changes for your files. Additionally, it allows for collaboration with other people on the same project. It is recommended to develop your work using a versioning tool such as git.
 Quick Git Intro      Peder Larson Group:  Git Tutorial Software Development for Scientists       </description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/jupyterinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/jupyterinfo/</guid>
      <description>Jupyter Resources One of the simplest and most versatile ways to use python is through Jupyter Lab. In order to get it working within your virtual environment, follow these steps:
Installation  Follow the earlier steps to SSH into one of the login node servers. Activate your virtual environment Run the following commands:  If you created an empty environment, use the following command first:  conda install jupyterlab -y   jupyter lab --no-browser --port 9XXX --notebook-dir=/  Replace 9XXX with the number used for the SSH port forwarding  e.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/linuxedu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/linuxedu/</guid>
      <description>Linux Resources The radiology servers are running a Linux distribution and therefore it is highly recommended to get familiar with Linux.
 Note: Keep in mind that the servers run tcsh by default, which is very similar to bash with some slight differences. You can type bash into any terminal to start using bash.
  Beginner&amp;rsquo;s Guide to the Bash Terminal      Linux cheatsheet  A collection of useful Linux commands      MIT Missing Semester  For a more advanced dive into these concepts, the MIT Missing Semester is another great resource to learn about linux.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/machinelearningedu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/machinelearningedu/</guid>
      <description>Machine Learning Resources Helpful Stanford introductory course to Machine Learning.
    Stanford CS229: Machine Learning Overview   Deep Learning Resources Helpful Stanford introductory course to Deep Learning and Convolutional Neural Networks (CNN).
    Stanford CS231n: Convolutional Neural Networks for Visual Recognition   Useful 3blue1brown educational video on CNNs
   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/matlabinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/matlabinfo/</guid>
      <description>Matlab Resources The servers have many versions of Matlab. Using Matlab is quite simple, all it requires is typing the following command into a terminal in a VNC server:
 matlab &amp;amp; The default matlab is usually R2015b, although this could change. In order to use a specific version, specify which version you would like to run:  e.g. matlab_2013a &amp;amp;   To check all versions of matlab available in the server, run the following command in a terminal:  bash -c &amp;quot;compgen -c | grep -E &#39;^matlab.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/mriedu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/mriedu/</guid>
      <description>MRI Resources Helpful introductions to MRI physics, image formation, image artifacts and terminology.
  Albert Einstein College of Medicine Introductory Series
       UCSF Biomedical Imaging 201 : Principles of MRI
      Larson Advanced Imaging Group Educational Resources     Siemens:
  MRI Physics
  MRI Acquisition and Artifacts
  MRI Glossary
  MRI Acronyms</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/onboarding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/onboarding/</guid>
      <description>Onboarding Checklist  1. Get a Slack account:  Email Ana Maria Deluca a brief description of who you are and which group you belong to   2. Get two-factor authentication  3. Get Pulse secure VPN access  4. Request UCSF GitHub access (requires UCSF login)  5. Request Radiology GitLab access (requires UCSF login) - Choose **Extend** under the **Request Type** menu.   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/pythoninfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/pythoninfo/</guid>
      <description>Python Resources The servers have several versions of python, with the default version being python 2.7. The best practice when coding in python is to set up a virtual environment with the libraries you will be using. To do this, follow these steps:
 Set up a virtual environment   Use the following command to initialize the latest conda in the servers:
 /netopt/rhel7/versions/python/Anaconda3-edge/bin/conda init bash tcsh Close the current terminal and open a new one for the changes to take place    Use the following commands to set up the directory where the python environments and packages will be stored:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/scannerinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/scannerinfo/</guid>
      <description>UCSF Research Imaging Systems  MR Scanners and Equipment To schedule scanner time, check the MB3T7T Outlook calendar and ask Dan Vigneron or Peder Larson about open slots.
Scanner Information from Radiology SCS (UCSF login required) - listing of all UCSF MRI scanners and some information about each, contact information for questions
  GE 3T: used for most clinical studies, all hyperpolarized studies, some preclinical studies. See MRI technologist for available coil and phantom setups.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/serverinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/serverinfo/</guid>
      <description>Radiology SCS Server Access All of the imaging and medical patient data is located within UCSF Radiology encrypted Linux servers. This is run by Scientific Computing Services (SCS). Information for access is at
https://wiki.radiology.ucsf.edu/bin/view/SCS/ (requires UCSF VPN login)
https://git.ucsf.edu/pages/intelligent-imaging-computational-core/i2-hpc-doc/index.html (requires UCSF VPN and UCSF GitHub account)
Please contact your PI or lab members to see which hosts to use for logging in.
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/sshinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/sshinfo/</guid>
      <description>SSH The SSH (Secure Shell) protocol is an encrypted communication protocol for networking. It is a highly versatile and powerful tool that serves as the main way to access the servers.
 Setup Depending on the operating system you are using, follow these options:
Mac and Linux users  Open a terminal and type the following:  ssh username@servername.radiology.ucsf.edu -L 9XXX:localhost:9XXX For the above command make sure to replace the username with your own, the servername with any of the listed server names (requires UCSF login) and the 9XXX with a number above 9020 There will be a prompt for your UCSF password    PC users  Use WSL, PuTTY, Cygwin or any other SSH tool:  Use servername.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/vncinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/vncinfo/</guid>
      <description>VNC Unlike SSH, VNC allows you to access a virtual display of the servers. This lets you browse through the file system and open visual applications such as Matlab and a web browser in a virtual operating system. Follow these steps to start a VNC session:
 Download and install VNC Viewer. Once installed you will need to SSH to the server to which you will VNC into and type the following command into a terminal:  myvncserver Towards the bottom of the output, take note of the last number as that will be the display number you will need to access the VNC server.</description>
    </item>
    
  </channel>
</rss>
