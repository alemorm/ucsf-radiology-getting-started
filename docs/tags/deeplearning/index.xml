<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deeplearning on Getting Started</title>
    <link>https://alemorm.github.io/ucsf-radiology-getting-started/tags/deeplearning/</link>
    <description>Recent content in deeplearning on Getting Started</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</managingEditor>
    <webMaster>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</webMaster><atom:link href="https://alemorm.github.io/ucsf-radiology-getting-started/tags/deeplearning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/deeplearninginfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/deeplearninginfo/</guid>
      <description>Deep Learning Resources Here are two popular and powerful machine learning libraries used for deep learning (refer to Machine Learning Resources to understand the concepts):
 Activate your Python virtual environment before running the following commands in the terminal:
 TensorFlow  Install the latest TensorFlow version:  conda install tensorflow-gpu -y     PyTorch  Install the latest PyTorch version:  conda install pytorch torchvision -y     DioscoriDESS DioscoriDESS is a segmentation framework developed by UCSF Radiology.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/dioscoridess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/dioscoridess/</guid>
      <description>DioscoriDESS  - Make sure to replace `/MY_PATH/dioscoridess/` with a location of your choice.    Make a directory where your input files (.yaml) and output files (.h5) will be stored:
mkdir -p /MY_PATH/dioscoridess/cfgs mkdir -p /MY_PATH/dioscoridess/logs mkdir -p /MY_PATH/dioscoridess/ckpt   Create your yaml file and save in /MY_PATH/dioscoridess/cfgs/my_input.yaml:
# Sample ./yaml config filecommon:seed:1234vis_GPU:&amp;#39;1&amp;#39;#single GPU compatibilitylog_path:&amp;#39;./experiments/training/logs/&amp;#39;save_path:&amp;#39;./experiments/training/ckpt/&amp;#39;print_freq:25data_train:data_root:&amp;#39;/data/bigbone5/JacobOeding/DL_code/splits/axial_train.csv&amp;#39;batch_size:4im_dims:!!python/tuple[512,512]crop :!!python/tuple[0,0,0,0]num_classes:3idx_classes :[0,1,2]num_channels:1normalization_file:&amp;#39;/data/bigbone5/JacobOeding/DL_code/dataInfo/Axial_MinMaxDataset.csv&amp;#39;data_val:data_root :&amp;#39;/data/bigbone5/JacobOeding/DL_code/splits/axial_val_onlySegmentedSlices.csv&amp;#39;batch_size:4im_dims:!!python/tuple[512,512]crop :!!python/tuple[0,0,0,0]num_classes:3idx_classes :[0,1,2]num_channels:1normalization_file:&amp;#39;/data/bigbone5/JacobOeding/DL_code/dataInfo/Axial_MinMaxDataset.csv&amp;#39;evaluate_mode:TruedataLoader_folder:&amp;#39;dataLoader&amp;#39;learn:max_steps:500000# instead of epochslr :0.00005optimizer:&amp;#39;adam&amp;#39;loss:&amp;#39;dice_loss_softmax&amp;#39;metrics:&amp;#39;dice_score&amp;#39;weights:[1,1.2,1]num_classes:3dataloader:&amp;#39;data_loader&amp;#39;comp:[&amp;#39;femur&amp;#39;,&amp;#39;tibia&amp;#39;,&amp;#39;background&amp;#39;]key_slice:!!python/tuple[0,0,0]patience:15# in number of validation runskeep_prob :0.</description>
    </item>
    
  </channel>
</rss>
