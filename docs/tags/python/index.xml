<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Getting Started</title>
    <link>https://alemorm.github.io/ucsf-radiology-getting-started/tags/python/</link>
    <description>Recent content in python on Getting Started</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</managingEditor>
    <webMaster>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</webMaster><atom:link href="https://alemorm.github.io/ucsf-radiology-getting-started/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/deeplearninginfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/deeplearninginfo/</guid>
      <description>Deep Learning Resources Here are two popular and powerful machine learning libraries used for deep learning (refer to Machine Learning Resources to understand the concepts):
 Activate your Python virtual environment before running the following commands in the terminal:
 TensorFlow  Install the latest TensorFlow version:  conda install tensorflow-gpu -y     PyTorch  Install the latest PyTorch version:  conda install pytorch torchvision -y     DioscoriDESS DioscoriDESS is a segmentation framework developed by UCSF Radiology.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/dioscoridess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/dioscoridess/</guid>
      <description>DioscoriDESS  - Make sure to replace `/MY_PATH/dioscoridess/` with a location of your choice.    Make a directory where your input files (.yaml) and output files (.h5) will be stored:
mkdir -p /MY_PATH/dioscoridess/cfgs mkdir -p /MY_PATH/dioscoridess/logs mkdir -p /MY_PATH/dioscoridess/ckpt   Create your yaml file and save in /MY_PATH/dioscoridess/cfgs/my_input.yaml:
# Sample ./yaml config filecommon:seed:1234vis_GPU:&amp;#39;1&amp;#39;#single GPU compatibilitylog_path:&amp;#39;./experiments/training/logs/&amp;#39;save_path:&amp;#39;./experiments/training/ckpt/&amp;#39;print_freq:25data_train:data_root:&amp;#39;/data/bigbone5/JacobOeding/DL_code/splits/axial_train.csv&amp;#39;batch_size:4im_dims:!!python/tuple[512,512]crop :!!python/tuple[0,0,0,0]num_classes:3idx_classes :[0,1,2]num_channels:1normalization_file:&amp;#39;/data/bigbone5/JacobOeding/DL_code/dataInfo/Axial_MinMaxDataset.csv&amp;#39;data_val:data_root :&amp;#39;/data/bigbone5/JacobOeding/DL_code/splits/axial_val_onlySegmentedSlices.csv&amp;#39;batch_size:4im_dims:!!python/tuple[512,512]crop :!!python/tuple[0,0,0,0]num_classes:3idx_classes :[0,1,2]num_channels:1normalization_file:&amp;#39;/data/bigbone5/JacobOeding/DL_code/dataInfo/Axial_MinMaxDataset.csv&amp;#39;evaluate_mode:TruedataLoader_folder:&amp;#39;dataLoader&amp;#39;learn:max_steps:500000# instead of epochslr :0.00005optimizer:&amp;#39;adam&amp;#39;loss:&amp;#39;dice_loss_softmax&amp;#39;metrics:&amp;#39;dice_score&amp;#39;weights:[1,1.2,1]num_classes:3dataloader:&amp;#39;data_loader&amp;#39;comp:[&amp;#39;femur&amp;#39;,&amp;#39;tibia&amp;#39;,&amp;#39;background&amp;#39;]key_slice:!!python/tuple[0,0,0]patience:15# in number of validation runskeep_prob :0.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/jupyterinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/jupyterinfo/</guid>
      <description>Jupyter Resources One of the simplest and most versatile ways to use python is through Jupyter Lab. In order to get it working within your virtual environment, follow these steps:
Installation  Follow the earlier steps to SSH into one of the login node servers. Activate your virtual environment Run the following commands:  If you created an empty environment, use the following command first:  conda install jupyterlab -y   jupyter lab --no-browser --port 9XXX --notebook-dir=/  Replace 9XXX with the number used for the SSH port forwarding  e.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/machinelearningedu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/machinelearningedu/</guid>
      <description>Machine Learning Resources Helpful Stanford introductory course to Machine Learning.
    Stanford CS229: Machine Learning Overview   Deep Learning Resources Helpful Stanford introductory course to Deep Learning and Convolutional Neural Networks (CNN).
    Stanford CS231n: Convolutional Neural Networks for Visual Recognition   Useful 3blue1brown educational video on CNNs
   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://alemorm.github.io/ucsf-radiology-getting-started/page/pythoninfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>alejandro.moralesmartinez@ucsf.edu (Alejandro Morales Martinez)</author>
      <guid>https://alemorm.github.io/ucsf-radiology-getting-started/page/pythoninfo/</guid>
      <description>Python Resources The servers have several versions of python, with the default version being python 2.7. The best practice when coding in python is to set up a virtual environment with the libraries you will be using. To do this, follow these steps:
 Set up a virtual environment   Use the following command to initialize the latest conda in the servers:
 /netopt/rhel7/versions/python/Anaconda3-edge/bin/conda init bash tcsh Close the current terminal and open a new one for the changes to take place    Use the following commands to set up the directory where the python environments and packages will be stored:</description>
    </item>
    
  </channel>
</rss>
